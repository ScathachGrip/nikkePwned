/**
 * ~(*‚âßœâ‚â¶) Autogenerates an `index.html` probably skill issue though ‚òùüòà
 *
 * - I focus on **backend logic and app fwoooow things~** so this HTML is **autogenerated~**
 *   instead of wasting my time with nerdy YUAI YUEKS design! >:3
 * - This minimal template covers all elements for now:
 *   - üå∏ Registering accounts
 *   - üéÄ Selecting and removing accounts
 *   - üíª Auto-login magic! ‚ú®
 * - The design is **dark mode supremacy** because light mode is for normies.
 * - The generated file is saved as `resources/index.html` like a good little script! (*‚âß‚ñΩ‚â¶)
 * - Logs success if it works, and if not... ugh, I guess it‚Äôs **yabai time**. üíÄ
 * - Hnnnnnnng, maybe later I should use Nuxt or Next.js... but for now, it's just **plain vanilla**. ‚òùüòî
 * - You should do PR if u can fix me senpai~! ‚òùü•∫
 *
 * - This bundle is mandatory for the app to work: Let me know if you want moar desu~! üç¶üò©
 *   - üì¶ `<script src="js/neutralino.js"></script>` ‚Üí Loads the Neutralino magic lib!
 *   - üì¶ `<script src="js/app.js"></script>` ‚Üí Loads compiled files and handles the app‚Äôs cute flows. üíñ
 *
 * @requires fs - Node.js File System module for saving the file~ ‚ú®
 * @throws {Error} Logs a big fat **yabai time**. üíÄ if file writing fails. (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª
 */

// eslint-disable-next-line @typescript-eslint/no-explicit-any
declare const require: any;
const fs = require("fs");

const htmlContent = `
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Account Index</title>
    <link rel="icon" type="image/x-icon" href="/icons/favicon.ico" />
    <style>
      body {
          font-family: Arial, sans-serif;
          background-color: #1e1e2e;
          color: #ffffff;
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          height: 100vh;
          margin: 0;
      }
      .container {
          width: 90%;
          max-width: 400px;
          background: #2a2a3b;
          padding: 20px;
          border-radius: 10px;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      }
      textarea {
          width: 100%;
          height: 100px;
          background: #333344;
          color: white;
          border: none;
          padding: 10px;
          border-radius: 5px;
          resize: none;
          box-sizing: border-box; /* Fix ukuran agar padding tidak bikin ukuran kacau */
      }
      select, button {
          width: 100%;
          padding: 10px;
          margin-top: 10px;
          font-size: 16px;
          border: none;
          border-radius: 5px;
      }
      select {
          background: #444455;
          color: white;
      }
      #registerBtn {
          background: #007bff;
          color: white;
      }
      #registerBtn:hover {
          background: #529be8;
      }
      #runBtn {
          background: #28a745;
          color: white;
      }

      #runBtn:hover {
          background: #68e986;
      }
      #removeBtn {
          background: #a20a0a;
          color: white;
      }
      #removeBtn:hover {
          background: #d74141;
      }

      .agold {
          color: #FFD700; /* Custom color */
          text-decoration: none; /* Optional: removes underline */
      }

      .agold:hover {
          color:rgb(156, 135, 15); /* Change color on hover */
      }


      .responsive-img {
          width: 100%;
          height: auto;
          max-width: 400px;
          display: block;
          margin: 0 auto;
      }

      .responsive-img-small {
          width: 100%;
          height: auto;
          max-width: 320px;
          display: block;
          margin: 0 auto;
      }

      #selectPathBtn {
          margin-left: 3px;
          background-color: #007bff;
          color: white;
          font-size: 12px;
          border: none;
          padding: 3px 9px;
          cursor: pointer;
          border-radius: 3px;
          width: auto;
          min-width: 50px;
      }
      #selectPathBtn:hover {
          background-color: #529be8;
      }
      #pathContainer {
          display: flex;
          align-items: center;
          gap: 5px;
      }
      #selectedPath {
          font-family: monospace;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
      }


      /* Base Snackbar container */
      #snackbar {
        visibility: hidden;
        max-width: 320px;
        color: #fff;
        text-align: left;
        border-radius: 8px;
        padding: 14px 16px;
        position: fixed;
        z-index: 1000;
        top: 20px;
        right: 20px;
        font-size: 14px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        display: flex;
        flex-direction: column;
        gap: 8px;
        opacity: 0;
        transform: translateY(-10px);
        transition: opacity 0.3s, transform 0.3s;
      }

      /* Success Snackbar */
      #snackbar.success {
        background-color: #222; /* Dark gray */
      }

      /* Fail Snackbar */
      #snackbar.fail {
        background-color:rgb(133, 12, 12); /* Red */
      }

      /* Show Snackbar */
      #snackbar.show {
        visibility: visible;
        opacity: 1;
        transform: translateY(0);
      }

      /* Snackbar Text */
      #snackbar-text {
        flex: 1;
        word-wrap: break-word;
      }

      /* Loading Bar */
      .progress {
        height: 4px;
        width: 100%;
        background-color: rgba(255, 255, 255, 0.2);
        border-radius: 2px;
        overflow: hidden;
        position: relative;
      }

      .progress-bar {
        height: 100%;
        width: 0%;
        position: absolute;
        left: 0;
        top: 0;
      }

      /* Success Bar */
      #snackbar.success .progress-bar {
        background-color:rgb(145, 255, 0); /* Orange */
      }

      /* Fail Bar */
      #snackbar.fail .progress-bar {
        background-color:rgb(166, 255, 0); /* Bright Red */
      }

      /* Responsive: Adjust for small screens */
      @media (max-width: 600px) {
        #snackbar {
          max-width: 90%;
          right: 5%;
          left: auto;
          font-size: 13px;
          padding: 12px;
        }
      }

      /* The Modal (background) */
      .modal {
        display: none; /* Hidden by default */
        position: fixed;
        z-index: 1000; /* High z-index */
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.68); /* Black w/ opacity */
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden; /* Prevent full-page scrolling */
         -webkit-animation-name: animatebottom; /* Fade in the background */
        -webkit-animation-duration: 0.4s;
        animation-name: animatebottom;
        animation-duration: 0.4s
      }

      /* Modal Content */
      .modal-content {
        background-color: rgb(23, 22, 22);
        padding: 20px;
        border-radius: 5px;
        border: 1px solid #888;
        width: 80%;
        max-width: 700px; /* Limit modal width */
        max-height: 80vh; /* Prevent modal from taking full height */
        overflow-y: auto; /* Enable scrolling inside modal */
        display: flex;
        flex-direction: column;
        -webkit-animation-name: animatebottom;
        -webkit-animation-duration: 0.4s;
        animation-name: animatebottom;
        animation-duration: 0.4s
      }

      /* The Close Button */
      .close {
        color: #aaaaaa;
        align-self: flex-end;
        font-size: 20px;
        font-weight: bold;
        cursor: pointer;
      }

      .close:hover {
        color: #ffffff;
      }

      /* Button Styling */
      #myBtn {
        background-color:rgb(20, 21, 22);
        color: white;
        font-size: 12px;
        border: none;
        padding: 3px 9px;
        cursor: pointer;
        border-radius: 3px;
        width: auto;
        min-width: 50px;
      }

      #myBtn:hover {
        background-color:rgb(71, 73, 74);
      }

      #delayBtn {
        background-color: rgb(20, 21, 22);
        color: white;
        font-size: 12px;
        border: 1px solid rgb(71, 73, 74);
        padding: 3px 6px;
        border-radius: 3px;
        width: 60px;
        height: 20px; /* Match button height */
        text-align: center;
        vertical-align: middle;
      }

      /* Push input and label lower */
      #delayBtn,
      label[for="delayBtn"] {
        margin-top: 8px; /* Adjust for lower positioning */
      }

      #delayBtn:focus {
        outline: none;
        border-color: rgb(100, 100, 100);
      }

      #delayBtn:focus {
        outline: none;
        border-color: rgb(100, 100, 100);
      }

      table, th, td, tr {
        border-radius: 10px;
        background-color: rgb(16, 16, 16) !important;
        color: white !important;
        border: none !important;
      }


      table {
        border-collapse: collapse;
        margin: 0;
        padding: 0;
        width: 100%;
        table-layout: fixed;
      }

      table caption {
        font-size: 1.5em;
        margin: .5em 0 .75em;
      }

      table tr {
        background-color:rgb(5, 5, 5);
        border: 1px solid #ddd;
        padding: .35em;
      }

      table th,
      table td {
        padding: .625em;
        text-align: center;
      }

      table th {
        font-size: .85em;
        letter-spacing: .1em;
        text-transform: uppercase;
      }

      @keyframes animatebottom{from{bottom:-300px;opacity:0} to{bottom:0;opacity:1}}

      @media screen and (max-width: 600px) {

        table caption {
          font-size: 1.3em;
        }

        table thead {
          clip: rect(0 0 0 0);
          height: 1px;
          margin: -1px;
          overflow: hidden;
          padding: 0;
          position: absolute;
          width: 1px;
        }

        table tr {
          display: block;
          margin-bottom: .625em;
        }

        table td {
          display: block;
          font-size: .8em;
          text-align: right;
        }

        table td::before {
          /*
          * aria-label has no advantage, it won't be read inside a table
          content: attr(aria-label);
          */
          content: attr(data-label);
          float: left;
          font-weight: bold;
          text-transform: uppercase;
        }

        table td:last-child {
          border-bottom: 0;
        }
      }
    </style>
  </head>
  <body>
    <div class="container">
      <img src="/icons/logo.png" alt="Description" class="responsive-img" />
      <div id="pathContainer" style="display: flex; align-items: center">
        <pre id="selectedPath">
Please select where nikke_launcher.exe was installed.</pre
        >
        <button id="selectPathBtn">Edit</button>
      </div>
      <textarea
        id="jsonInput"
        placeholder="Enter account JSON here..."
      ></textarea>
      <button id="registerBtn">üîëRegister Accounts</button>
      <br /><br />
      <select id="accountSelect">
        <option value="">Select account</option>
      </select>
      <button id="runBtn">Proceed auto login</button>
      <br />
      <button id="removeBtn">or Remove account</button>
      <div
        style="
          display: flex;
          align-items: center;
          justify-content: center;
          gap: 6px;
          height: 32px;
        "
      >
        <label for="delayBtn" style="white-space: nowrap; line-height: 1"
          >Delay (as second):</label
        >
        <input
          type="number"
          id="delayBtn"
          name="delay"
          min="1"
          max="5"
          step="1"
          value="3"
        />
        <button id="myBtn">üïíLog History</button>
      </div>
    </div>
    <div id="snackbar">
      <span id="snackbar-text"></span>
      <div class="progress"><div class="progress-bar"></div></div>
    </div>

    <div id="myModal" class="modal" style="display: none">
      <div class="modal-content">
        <span class="close">&times;</span>
        <table>
          <thead>
            <tr>
              <th scope="col">AccountsObject</th>
              <th scope="col">Type</th>
              <th scope="col">isSuccess</th>
              <th scope="col">Date</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td data-label="AccountsObject">null</td>
              <td data-label="Type">null</td>
              <td data-label="isSuccess">null</td>
              <td data-label="Date">null</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>

    <p>Password Manager for NIKKE v<span id="appVersion">Loading...</span></p>
    <script src="js/neutralino.js"></script>
    <script src="js/app.js"></script>
  </body>
</html>
`;

try {
  fs.writeFileSync("resources/index.html", htmlContent, "utf-8");
  console.log("‚úÖ index.html created successfully.");
} catch (error) {
  console.error("‚ùå Failed to create index.html:", error);
}
