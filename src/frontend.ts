/**
 * ~(*‚âßœâ‚â¶) Autogenerates an `index.html` probably skill issue though ‚òùüòà
 *
 * - I focus on **backend logic and app fwoooow things~** so this HTML is **autogenerated~**
 *   instead of wasting my time with nerdy YUAI YUEKS design! >:3
 * - This minimal template covers all elements for now:
 *   - üå∏ Registering accounts
 *   - üéÄ Selecting and removing accounts
 *   - üíª Auto-login magic! ‚ú®
 * - The design is **dark mode supremacy** because light mode is for normies.
 * - The generated file is saved as `resources/index.html` like a good little script! (*‚âß‚ñΩ‚â¶)
 * - Logs success if it works, and if not... ugh, I guess it‚Äôs **yabai time**. üíÄ
 * - Hnnnnnnng, maybe later I should use Nuxt or Next.js... but for now, it's just **plain vanilla**. ‚òùüòî
 * - You should do PR if u can fix me senpai~! ‚òùü•∫
 *
 * - This bundle is mandatory for the app to work: Let me know if you want moar desu~! üç¶üò©
 *   - üì¶ `<script src="js/neutralino.js"></script>` ‚Üí Loads the Neutralino magic lib!
 *   - üì¶ `<script src="js/app.js"></script>` ‚Üí Loads compiled files and handles the app‚Äôs cute flows. üíñ
 *
 * @requires fs - Node.js File System module for saving the file~ ‚ú®
 * @throws {Error} Logs a big fat **yabai time**. üíÄ if file writing fails. (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª
 */

// eslint-disable-next-line @typescript-eslint/no-explicit-any
declare const require: any;
const fs = require("fs");

const htmlContent = `
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Account Index</title>
    <link rel="stylesheet" href="https://fonts.bunny.net/css?family=manrope:300,400,500,600,700,800&display=swap">
    <link rel="icon" type="image/x-icon" href="/icons/favicon.ico" />
    <style>
      body {
          font-family: 'Manrope', sans-serif;
          background-color: #1e1e2e;
          color: #ffffff;
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          height: 100vh;
          margin: 0;
      }
      .container {
          width: 90%;
          max-width: 450px;
          background: #2a2a3b;
          padding: 20px;
          border-radius: 10px;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      }
      textarea {
          width: 100%;
          height: 100px;
          background: #333344;
          color: white;
          border: none;
          padding: 10px;
          border-radius: 5px;
          resize: none;
          box-sizing: border-box; /* Fix ukuran agar padding tidak bikin ukuran kacau */
      }
      select, button {
          width: 100%;
          padding: 10px;
          margin-top: 10px;
          font-size: 16px;
          border: none;
          border-radius: 5px;
      }
      select {
          background: #444455;
          color: white;
      }
      #registerBtn {
          background: #007bff;
          color: white;
      }
      #registerBtn:hover {
          background: #529be8;
      }
      #runBtn {
          background: #28a745;
          color: white;
      }

      #runBtn:hover {
          background: #68e986;
      }
      #removeBtn {
          background: #a20a0a;
          color: white;
      }
      #removeBtn:hover {
          background: #d74141;
      }

      .agold {
          color: #FFD700; /* Custom color */
          text-decoration: none; /* Optional: removes underline */
      }

      .agold:hover {
          color:rgb(156, 135, 15); /* Change color on hover */
      }


      .responsive-img {
          width: 100%;
          height: auto;
          max-width: 400px;
          display: block;
          margin: 0 auto;
      }

      .responsive-img-small {
          width: 100%;
          height: auto;
          max-width: 320px;
          display: block;
          margin: 0 auto;
      }

      #selectPathBtn {
          margin-left: 3px;
          background-color: #007bff;
          color: white;
          font-size: 12px;
          border: none;
          padding: 3px 9px;
          cursor: pointer;
          border-radius: 3px;
          width: auto;
          min-width: 50px;
      }
      #selectPathBtn:hover {
          background-color: #529be8;
      }
      #pathContainer {
          display: flex;
          align-items: center;
          gap: 5px;
      }
      #selectedPath {
          font-family: monospace;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
      }


      /* Base Snackbar container */
      #snackbar {
        visibility: hidden;
        max-width: 320px;
        color: #fff;
        text-align: left;
        border-radius: 8px;
        padding: 14px 16px;
        position: fixed;
        z-index: 1000;
        top: 20px;
        right: 20px;
        font-size: 14px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        display: flex;
        flex-direction: column;
        gap: 8px;
        opacity: 0;
        transform: translateY(-10px);
        transition: opacity 0.3s, transform 0.3s;
      }

      /* Success Snackbar */
      #snackbar.success {
        background-color: #222; /* Dark gray */
      }

      /* Fail Snackbar */
      #snackbar.fail {
        background-color:rgb(133, 12, 12); /* Red */
      }

      /* Show Snackbar */
      #snackbar.show {
        visibility: visible;
        opacity: 1;
        transform: translateY(0);
      }

      /* Snackbar Text */
      #snackbar-text {
        flex: 1;
        word-wrap: break-word;
      }

      /* Loading Bar */
      .progress {
        height: 4px;
        width: 100%;
        background-color: rgba(255, 255, 255, 0.2);
        border-radius: 2px;
        overflow: hidden;
        position: relative;
      }

      .progress-bar {
        height: 100%;
        width: 0%;
        position: absolute;
        left: 0;
        top: 0;
      }

      /* Success Bar */
      #snackbar.success .progress-bar {
        background-color:rgb(145, 255, 0); /* Orange */
      }

      /* Fail Bar */
      #snackbar.fail .progress-bar {
        background-color:rgb(166, 255, 0); /* Bright Red */
      }

      /* Responsive: Adjust for small screens */
      @media (max-width: 600px) {
        #snackbar {
          max-width: 90%;
          right: 5%;
          left: auto;
          font-size: 13px;
          padding: 12px;
        }
      }

      /* The Modal (background) */
      .modal {
        border: none !important;
        display: none; /* Hidden by default */
        position: fixed;
        z-index: 1000; /* High z-index */
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.68); /* Black w/ opacity */
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden; /* Prevent full-page scrolling */
         -webkit-animation-name: animatebottom; /* Fade in the background */
        -webkit-animation-duration: 0.4s;
        animation-name: animatebottom;
        animation-duration: 0.4s
      }

      /* Modal Content */
      .modal-content {
        border: none !important;
        background-color: rgb(23, 22, 22);
        padding: 20px;
        border-radius: 10px;
        border: 1px solid #888;
        width: 80%;
        max-width: 700px; /* Limit modal width */
        max-height: 80vh; /* Prevent modal from taking full height */
        overflow-y: auto; /* Enable scrolling inside modal */
        display: flex;
        flex-direction: column;
        -webkit-animation-name: animatebottom;
        -webkit-animation-duration: 0.4s;
        animation-name: animatebottom;
        animation-duration: 0.4s
      }

      .modal-content {
          scrollbar-color: #555 #222; /* thumb color, track color */
          scrollbar-width: thin;
      }

      .modal-content::-webkit-scrollbar {
          width: 8px; /* Adjust width */
      }

      .modal-content::-webkit-scrollbar-track {
          background: #222; /* Dark background */
          border-radius: 10px;
      }

      .modal-content::-webkit-scrollbar-thumb {
          background: #555; /* Dark gray scrollbar */
          border-radius: 10px;
      }

      .modal-content::-webkit-scrollbar-thumb:hover {
          background: #777; /* Lighter gray on hover */
      }

      /* The Close Button */
      .close {
        color: #aaaaaa;
        align-self: flex-end;
        font-size: 20px;
        font-weight: bold;
        cursor: pointer;
      }

      .close:hover {
        color: #ffffff;
      }

      /* Button Styling */
      #myBtn {
        background-color:rgb(20, 21, 22);
        color: white;
        font-size: 12px;
        border: none;
        padding: 3px 9px;
        cursor: pointer;
        border-radius: 3px;
        width: auto;
        min-width: 50px;
      }

      #myBtn:hover {
        background-color:rgb(71, 73, 74);
      }

      #purgeBtn {
        background-color:rgb(105, 5, 5);
        color: white;
        font-size: 12px;
        border: none;
        padding: 3px 9px;
        cursor: pointer;
        border-radius: 3px;
        width: auto;
        min-width: 50px;
      }

      #purgeBtn:hover {
        background-color:rgb(196, 15, 15);
      }

      #delayBtn {
        background-color: rgb(20, 21, 22);
        color: white;
        font-size: 12px;
        border: 1px solid rgb(71, 73, 74);
        padding: 3px 6px;
        border-radius: 3px;
        width: 30px;
        height: 25px; /* Match button height */
        text-align: center;
        vertical-align: middle;
      }

      /* Push input and label lower */
      #delayBtn,
      label[for="delayBtn"] {
        margin-top: 8px; /* Adjust for lower positioning */
      }

      #delayBtn:focus {
        outline: none;
        border-color: rgb(100, 100, 100);
      }

      #delayBtn:focus {
        outline: none;
        border-color: rgb(100, 100, 100);
      }


      #delayBtnLogin {
        background-color: rgb(20, 21, 22);
        color: white;
        font-size: 12px;
        border: 1px solid rgb(71, 73, 74);
        padding: 3px 6px;
        border-radius: 3px;
        width: 30px;
        height: 25px; /* Match button height */
        text-align: center;
        vertical-align: middle;
      }

      /* Push input and label lower */
      #delayBtnLogin,
      label[for="delayBtnLogin"] {
        margin-top: 8px; /* Adjust for lower positioning */
      }

      #delayBtnLogin:focus {
        outline: none;
        border-color: rgb(100, 100, 100);
      }

      #delayBtnLogin:focus {
        outline: none;
        border-color: rgb(100, 100, 100);
      }

      table, th, td, tr {
        border-radius: 10px;
        background-color: rgb(16, 16, 16) !important;
        color: white !important;
        border: none !important;
      }


      table {
        border-collapse: collapse;
        margin: 0;
        padding: 0;
        width: 100%;
        table-layout: fixed;
      }

      table caption {
        font-size: 1.5em;
        margin: .5em 0 .75em;
      }

      table tr {
        background-color:rgb(5, 5, 5);
        border: 1px solid #ddd;
        padding: .35em;
      }

      table th,
      table td {
        padding: .625em;
        text-align: center;
      }

      table th {
        font-size: .85em;
        letter-spacing: .1em;
        text-transform: uppercase;
      }

      @keyframes animatebottom{from{bottom:-300px;opacity:0} to{bottom:0;opacity:1}}

      @media screen and (max-width: 600px) {

        table caption {
          font-size: 1.3em;
        }

        table thead {
          clip: rect(0 0 0 0);
          height: 1px;
          margin: -1px;
          overflow: hidden;
          padding: 0;
          position: absolute;
          width: 1px;
        }

        table tr {
          display: block;
          margin-bottom: .625em;
        }

        table td {
          display: block;
          font-size: .8em;
          text-align: right;
        }

        table td::before {
          /*
          * aria-label has no advantage, it won't be read inside a table
          content: attr(aria-label);
          */
          content: attr(data-label);
          float: left;
          font-weight: bold;
          text-transform: uppercase;
        }

        table td:last-child {
          border-bottom: 0;
        }
      }

      /* Untuk browser berbasis WebKit (Chrome, Edge, Safari) */
      input[type="number"]::-webkit-inner-spin-button, 
      input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      /* Untuk Firefox */
      input[type="number"] {
        -moz-appearance: textfield;
      }

      #capsWarning {
          display: none; /* Hide by default */
          font-size: 12px;
          font-weight: bold;
          text-align: center;
          margin: 2px auto;
          padding: 2px 8px;
          background: rgba(255, 0, 0, 0.2);
          color: red;
          border-radius: 4px;
          width: fit-content;
      }

      .search-box {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-bottom: 16px; /* jarak bawah */
      }

      .search-box .search-icon {
        width: 30px;
        height: 30px;
      }

      #searchInput {
        flex: 1;
        max-width: 300px;
        padding: 6px 10px;
        font-size: 14px;
        color: #eee;
        background-color: #111;
        border: 1px solid rgb(0, 0, 0);
        border-radius: 4px;
        transition: border-color 0.2s, background-color 0.2s;
      }

      #searchInput:focus {
        outline: none;
        border-color:rgb(41, 39, 39);
        background-color: #111;
      }

      @keyframes berdetak {
      0%, 100% {
        transform: scale(1);
      }
      50% {
        transform: scale(1.1);
      }
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }

    .berdetak {
      position: fixed;
      bottom: 20px;
      right: 20px;
      background-color: white;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      animation: berdetak 1s ease-in-out infinite;
      z-index: 9999;
      cursor: pointer;
    }

    .berdetak:hover {
      animation: spin 2s linear infinite;
    }

    .berdetak img {
      width: 50px;
      height: 50px;
      pointer-events: none; /* so the hover still works on the span */
    }

    #click {
      background-color: #292929;
      color: #eee;
      padding: 1rem;
      border-radius: 6px;
      margin-bottom: 1rem;
      border: 1px solid #444;
      font-size: 0.95rem;
    }

    input[type="text"] {
      background-color: #222;
      color: #eee;
      border: 1px solid #555;
      border-radius: 4px;
      padding: 4px 8px;
      margin-bottom: 0.5rem;
      width: 60px;
      font-size: 0.9rem;
      vertical-align: middle;
    }

    button#reset {
      background-color: #a80a24;
      color: #fff;
      border: none;
      border-radius: 4px;
      padding: 4px 10px;
      font-size: 0.85rem;
      height: 28px;
      margin-left: 6px;
      cursor: pointer;
      transform: translateY(-5px); /* üíÄ HACK SEBENARNYA */
    }
    button#reset:hover {
      background-color: #c41630;
    }

    #dcCount {
      background-color: #222;
      color: #eee;
      border: 1px solid #555;
      border-radius: 4px;
      padding: 4px 8px;
      margin-bottom: 0.5rem;
      width: 60px;
      font-size: 0.9rem;
    }

    #textarea {
      background-color: #111;
      color: #eee;
      border: 1px solid #444;
      border-radius: 4px;
      padding: 6px;
      width: 100%;
      margin-top: 0.5rem;
      resize: vertical;
      font-family: monospace;
      font-size: 0.85rem;
    }

    .gambarklik {
      width: 100%;
      height: auto;
      cursor: pointer;
    }

    @keyframes vibrate {
      0%, 100% { transform: translate(0, 0); }
      20%  { transform: translate(-15px, 15px); }
      40%  { transform: translate(15px, -15px); }
      60%  { transform: translate(-15px, -15px); }
      80%  { transform: translate(15px, 15px); }
    }

    .vibrate {
      animation: vibrate 0.08s linear;
    }

    </style>
  </head>
  <body>
    <div class="container">
      <img src="/icons/logo.png" alt="Description" class="responsive-img" />
      <div id="capsWarning">‚ö†Ô∏è Caps Lock is ON</div>
      <div id="pathContainer" style="display: flex; align-items: center">
        <pre id="selectedPath">
Please select where nikke_launcher.exe was installed.</pre
        >
        <button id="selectPathBtn">Edit</button>
      </div>
      <textarea
        id="jsonInput"
        placeholder="Enter account JSON here..."
      ></textarea>
      <button id="registerBtn">üîëRegister Accounts</button>
      <br /><br />
      <select id="accountSelect">
        <option value="">Select account</option>
      </select>
      <button id="runBtn">Proceed auto login</button>
      <br />
      <button id="removeBtn">or Remove account</button>
      <div
        style="
          display: flex;
          align-items: center;
          justify-content: center;
          gap: 6px;
          height: 32px;
        "
      >
        <label for="delayBtn" style="white-space: nowrap; line-height: 1; font-size: 12px;"
          >Delay (switch):</label
        >
        <input
          type="number"
          id="delayBtn"
          name="delayswitch"
          min="1"
          max="5"
          step="1"
          value="3"
          style="font-size: 12px;"
        />

         <label for="delayBtnLogin" style="white-space: nowrap; line-height: 1; font-size: 12px;"
          >Delay (login):</label
        >
        <input
          type="number"
          id="delayBtnLogin"
          name="delaylogin"
          min="1"
          max="5"
          step="1"
          value="3"
          style="font-size: 12px;"
        />

        <button id="myBtn">üîçLogs</button>
        <button id="purgeBtn">‚õîPurge Data</button>
      </div>
    </div>
    <div id="snackbar">
      <span id="snackbar-text"></span>
      <div class="progress"><div class="progress-bar"></div></div>
    </div>

    <div id="myModal" class="modal" style="display: none">
      <div class="modal-content">
        <span class="close">&times;</span>
          <div class="search-box">
            <input type="text" id="searchInput" placeholder="search string" />
          </div>
        <table>
          <thead>
            <tr>
              <th scope="col">String</th>
              <th scope="col">Type</th>
              <th scope="col">isSuccess</th>
              <th scope="col">Date</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td data-label="String">null</td>
              <td data-label="Type">null</td>
              <td data-label="isSuccess">null</td>
              <td data-label="Date">null</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>

    <div id="myModalWortel" class="modal" style="display: none">
      <div class="modal-content">
      <span class="close">&times;</span>
        <div class="asuwh">
          <div id="click" class="click" style="background: orange; padding: 1rem; margin-bottom: 1rem;">
            <img src="/static/my.png" id="gambarKlik" class="gambarklik" alt="Click me!" />
          </div>

          Clicks: <input id="count" type="text" value="0" size="4"> 
          <button id="reset">Reset</button><br />
          Fast double click count: <input id="dcCount" type="text" value="0" size="4"> <br />
          <textarea id="textarea" rows="10" cols="50"></textarea>
       </div>
      </div>
    </div>
    <p>Password Manager for NIKKE v<span id="appVersion">Loading...</span></p>
    <span class="berdetak" id="myBtnWortel">
      <img
        src="/static/rpc_testing.png"
        alt="sun"
        style="width: 30px; height: 30px"
        />
    </span>
    <script src="js/neutralino.js"></script>
    <script src="js/app.js"></script>
  </body>
</html>
`;

try {
  fs.writeFileSync("resources/index.html", htmlContent, "utf-8");
  console.log("‚úÖ index.html created successfully.");
} catch (error) {
  console.error("‚ùå Failed to create index.html:", error);
}
